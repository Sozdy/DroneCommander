version: '3.7'

services:
  drone-commander-nginx:
    build:
      context: ./docker/services/nginx
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - '8033:80'
    volumes:
      - './docker/services/nginx/nginx.conf:/etc/nginx/nginx.conf:ro'
      - './docker/services/nginx/conf.d:/etc/nginx/conf.d:ro'
      - './docker/services/nginx/logs/nginx:/var/log/nginx'
      - './:/var/www'
    depends_on:
        - drone-commander-php-fpm
        - drone-commander-postgres

  drone-commander-php-fpm:
    build:
      args:
        user: local_user
        uid: 1000
      context: ./docker/services/php-fpm
      dockerfile: Dockerfile
    restart: unless-stopped
    volumes:
      - './:/var/www'
      - './docker/services/php-fpm/php-ini-overrides.ini:/usr/local/etc/php/conf.d/php.ini'


  drone-commander-postgres:
    image: postgres:16
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: '${DB_DATABASE:-homestead}'
      POSTGRES_USER: '${DB_USERNAME:-homestead}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_ROOT_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - ./docker/postgres/database:/var/lib/postgres

  drone-commander-postgres-test:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: '${DB_DATABASE:-homestead}'
      POSTGRES_USER: '${DB_USERNAME:-homestead}'
      POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
      POSTGRES_ROOT_PASSWORD: '${DB_PASSWORD:-secret}'
    volumes:
      - ./docker/postgres-test/database:/var/lib/postgres

